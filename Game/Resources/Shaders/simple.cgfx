struct Vertex
{
	in float3 Position : POSITION;
	in float3 Color : COLOR;
}

struct VertexToFragment
{
	float4 Position : POSITION;
	float4 Color : COLOR;
}

float4x4 ModelViewProjection;

VertexToFragment mainVP( Vertex IN, uniform float4x4 modelViewProjection )
{
	VertexToFragment OUT;

	OUT.Position = mul( modelViewProjection, float4( IN.Position, 1.0 ) );
	//For DX:
	//OUT.Position = mul( float4( IN.Position, 1.0 ), modelViewProjection );
	
	OUT.Color = float4( IN.Color, 1.0 );

	return OUT;
}

float4 mainFP( VertexToFragment IN ) : COLOR
{
	return IN.Color;
}

technique t0
{
	pass p0
	{
		VertexProgram = compile gp4vp mainVP( ModelViewProjection );
		FragmentProgram = compile gp4fp mainFP();
	}
}